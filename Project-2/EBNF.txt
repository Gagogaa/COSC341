<program> -> main <lb> <stmt list> <rb>
<stmt list> -> {<stmt>}+
<stmt> -> (<read stmt> | <write stmt> |<if-else stmt> | <while stmt> | <assignment stmt>)

<addignment stmt> -> <identifier> := <expr>;
<identifier> -> <letter>{(<letter> | <digit>)}
<letter> -> (A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z |
	    a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z)
<digit> -> (1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0)

<read stmt> -> read <rp> <identifier> {,<identifier>} <lp>;
<write stmt> -> write <rp> <identifier> {,<identifier>} <lp>;
<while stmt> -> while <lp> <stmt list> <rp> <lb> <stmt list> <rb>

<if-else stmt> -> if <lp> <boolean expr> <rp> <lb> <stmt list> <rb>[<else stmt>]
<else stmt> -> else <lb> <stmt list> <rb>
<boolean expr> -> <operand> <relational operator> <operand>
<relational operator> -> (< | > | <= | >= | == | !=)
<operand> -> (<identifier> | <integer literal>)
<integer literal> -> {<digit>}+

// TODO copy from the notes
<expr> ->

<lb> -> {
<rb> -> }

<lp> -> (
<rp> -> )
